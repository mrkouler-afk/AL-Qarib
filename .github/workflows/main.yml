name: Build Flet Android (APK & AAB - Safe Mode)

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # للتنفيذ اليدوي

env:
  BUILD_NUMBER: ${{ github.run_number }}
  BUILD_VERSION: "1.0.0"

jobs:
  build-android:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: 🧩 Checkout repository
        uses: actions/checkout@v4

      - name: 🐍 Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: 🪶 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.29.2"
          channel: "stable"
          cache: true

      - name: 🧰 Install Android tools
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev ninja-build cmake unzip pkg-config

      - name: ⚙️ Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flet[all]
          if [ -f "requirements.txt" ]; then
            pip install -r requirements.txt
          fi

      - name: ✅ Accept Android licenses
        continue-on-error: true
        run: |
          yes | sdkmanager --licenses > /dev/null 2>&1 || true
          echo "y" | flutter doctor --android-licenses > /dev/null 2>&1 || true

      - name: 🔍 Flutter Environment Check
        run: |
          flutter --version
          flutter doctor -v

      - name: 🧹 Clean previous builds
        run: |
          flutter clean > /dev/null 2>&1 || true
          rm -rf build/ > /dev/null 2>&1 || true

      - name: 📱 Build APK
        run: |
          echo "🔨 Building APK (Build: $BUILD_NUMBER, Version: $BUILD_VERSION)..."
          flet build apk --build-number=$BUILD_NUMBER --build-version=$BUILD_VERSION --verbose
          echo "✅ APK build completed successfully!"

      - name: 📦 Build AAB
        run: |
          echo "🔨 Building AAB (Build: $BUILD_NUMBER, Version: $BUILD_VERSION)..."
          flet build aab --build-number=$BUILD_NUMBER --build-version=$BUILD_VERSION --verbose
          echo "✅ AAB build completed successfully!"

      - name: 🔎 Verify Build Outputs
        run: |
          echo "📁 Build outputs:"
          find build/ -type f -name "*.apk" -o -name "*.aab" | while read file; do
            echo "📄 Found: $file ($(du -h "$file" | cut -f1))"
          done
          
          APK_COUNT=$(find build/ -name "*.apk" | wc -l)
          AAB_COUNT=$(find build/ -name "*.aab" | wc -l)
          
          echo "📊 APK files: $APK_COUNT"
          echo "📊 AAB files: $AAB_COUNT"
          
          if [ $APK_COUNT -eq 0 ] && [ $AAB_COUNT -eq 0 ]; then
            echo "❌ No build files found!"
            exit 1
          fi

      - name: 💾 Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-apk-${{ github.run_number }}
          path: build/**/*.apk
          retention-days: 30

      - name: 💾 Upload AAB Artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-aab-${{ github.run_number }}
          path: build/**/*.aab
          retention-days: 30

      - name: 📋 Build Summary
        if: always()
        run: |
          echo "🎉 Build Summary for Run #${{ github.run_number }}"
          echo "📱 APK Files:"
          find build/ -name "*.apk" 2>/dev/null || echo "   No APK files found"
          echo "📦 AAB Files:"
          find build/ -name "*.aab" 2>/dev/null || echo "   No AAB files found"
          echo "🕒 Finished at: $(date)"
