name: All Builds (Linux, macOS, Windows, Android, IPA, APK, AAB)

on:
  push:
    branches:
      - master
      - main
  pull_request:
    branches:
      - master
      - main
  workflow_dispatch:

env:
  BUILD_NUMBER: 1
  BUILD_VERSION: 1.0.0
  PYTHON_VERSION: 3.12.2
  FLUTTER_VERSION: '3.22.2'  # استخدام إصدار محدد بين علامتي اقتباس

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Python Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flet

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'

    - name: Install Linux dependencies
      run: |
        sudo apt-get update -y
        sudo apt-get install -y ninja-build libgtk-3-dev clang cmake pkg-config

    - name: Verify Flutter environment
      run: |
        flutter --version
        flutter doctor -v
        flutter config --enable-linux-desktop

    - name: Flet Build Linux
      run: |
        flet build linux --build-number=$BUILD_NUMBER --build-version=$BUILD_VERSION --verbose

    - name: Upload Linux Artifact
      uses: actions/upload-artifact@v4
      with:
        name: linux-build
        path: build/linux
        if-no-files-found: warn

  build-macos:
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Python Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flet

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'

    - name: Verify Flutter environment
      run: |
        flutter --version
        flutter doctor -v
        flutter config --enable-macos-desktop

    - name: Flet Build macOS
      run: |
        flet build macos --build-number=$BUILD_NUMBER --build-version=$BUILD_VERSION --verbose

    - name: Upload macOS Artifact
      uses: actions/upload-artifact@v4
      with:
        name: macos-build
        path: build/macos
        if-no-files-found: warn

  build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Python Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flet

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'

    - name: Verify Flutter environment
      run: |
        flutter --version
        flutter doctor -v
        flutter config --enable-windows-desktop

    - name: Flet Build Windows
      run: |
        flet build windows --build-number=$env:BUILD_NUMBER --build-version=$env:BUILD_VERSION --verbose

    - name: Upload Windows Artifact
      uses: actions/upload-artifact@v4
      with:
        name: windows-build
        path: build/windows
        if-no-files-found: warn

  build-apk:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Python Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flet

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '11'

    - name: Setup Android SDK
      run: |
        echo "ANDROID_HOME=/usr/local/lib/android/sdk" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=/usr/local/lib/android/sdk" >> $GITHUB_ENV

    - name: Accept Android Licenses
      run: |
        yes | /usr/local/lib/android/sdk/cmdline-tools/latest/bin/sdkmanager --licenses || true

    - name: Verify Flutter environment
      run: |
        flutter --version
        flutter doctor -v

    - name: Install Android dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev unzip

    - name: Flet Build APK
      run: |
        flet build apk --build-number=$BUILD_NUMBER --build-version=$BUILD_VERSION --verbose

    - name: Upload APK Artifact
      uses: actions/upload-artifact@v4
      with:
        name: apk-build
        path: build/apk
        if-no-files-found: warn

  build-aab:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Python Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flet

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '11'

    - name: Setup Android SDK
      run: |
        echo "ANDROID_HOME=/usr/local/lib/android/sdk" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=/usr/local/lib/android/sdk" >> $GITHUB_ENV

    - name: Accept Android Licenses
      run: |
        yes | /usr/local/lib/android/sdk/cmdline-tools/latest/bin/sdkmanager --licenses || true

    - name: Verify Flutter environment
      run: |
        flutter --version
        flutter doctor -v

    - name: Flet Build AAB
      run: |
        flet build aab --build-number=$BUILD_NUMBER --build-version=$BUILD_VERSION --verbose

    - name: Upload AAB Artifact
      uses: actions/upload-artifact@v4
      with:
        name: aab-build
        path: build/aab
        if-no-files-found: warn

  build-ipa:
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Python Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flet

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'

    - name: Verify Flutter environment
      run: |
        flutter --version
        flutter doctor -v

    - name: Flet Build IPA
      run: |
        flet build ipa --build-number=$BUILD_NUMBER --build-version=$BUILD_VERSION --verbose

    - name: Upload IPA Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ipa-build
        path: build/ipa
        if-no-files-found: warn
